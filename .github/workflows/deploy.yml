name: Deploy to Google Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION || 'southamerica-east1' }}
  SERVICE_NAME: lavago-api

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Run tests
        run: bun test
      
      - name: Build application
        run: bun run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      
      - name: Configure Docker for Google Container Registry
        run: gcloud auth configure-docker
      
      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --port 3000 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10 \
            --min-instances 0 \
            --timeout 300 \
            --concurrency 80 \
            --set-env-vars NODE_ENV=production
      
      - name: Set environment variables
        run: |
          gcloud run services update ${{ env.SERVICE_NAME }} \
            --region ${{ secrets.GCP_REGION }} \
            --update-env-vars \
              SUPABASE_URL=${{ secrets.SUPABASE_URL }},\
              SUPABASE_SECRET_KEY=${{ secrets.SUPABASE_SECRET_KEY }},\
              JWT_SECRET=${{ secrets.JWT_SECRET }},\
              PAGBANK_API_KEY=${{ secrets.PAGBANK_API_KEY }},\
              PAGBANK_WEBHOOK_SECRET=${{ secrets.PAGBANK_WEBHOOK_SECRET }}
      
      - name: Get service URL
        id: service-url
        run: |
          echo "url=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ secrets.GCP_REGION }} --format='value(status.url)')" >> $GITHUB_OUTPUT
      
      - name: Test health endpoint
        run: |
          sleep 30  # Wait for service to be ready
          curl -f ${{ steps.service-url.outputs.url }}/health
      
      - name: Comment deployment info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Deployment Successful!**
              
              **Service URL:** ${{ steps.service-url.outputs.url }}
              **Health Check:** ${{ steps.service-url.outputs.url }}/health
              **Commit:** ${{ github.sha }}
              **Environment:** Production`
            })
